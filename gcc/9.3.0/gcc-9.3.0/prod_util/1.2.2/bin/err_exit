#!/bin/sh

# SCRIPT NAME:  err_exit  Author:   Bill Facey   2 Apr 96
#                         Modified: Kit Menlove 28 May 15
#
# ABSTRACT:  This script is to be used when a fatal error or condition 
# has been reached and you want to terminate the job.
#
# USAGE:  To use this script one must export the following variables to the
# script: jobid, SENDECF, pgm, pgmout, DATA, and jlogfile. One can provide
# a message for the logfile by passing it to the script as an argument.

msg1=${@:-Job $jobid failed}
if [ -n "$pgm" ]; then
  msg1+=", ERROR IN $pgm"
fi
if [ -n "$err" ]; then
  msg1+=" RETURN CODE $err"
fi

msg2="
*************************************************************
** FATAL ERROR: $msg1
** ABNORMAL EXIT at $(date) on $HOSTNAME
*************************************************************
"

>&2 echo "$msg2"

# list loaded modules
#. /opt/modules/default/init/sh
module list
>&2 echo ""

if [ -n "$jlogfile" ]; then
  postmsg $jlogfile "$msg1"
else
  >&2 echo "WARNING: jlogfile variable not defined"
fi

# list files in temporary working directory
if [ -n "$DATA" ]; then
  >&2 echo $DATA
  >&2 ls -ltr $DATA
else
  >&2 echo "WARNING: DATA variable not defined"
fi

# save standard output
if [ -n "$pgmout" ]; then
  if [ -s errfile ]; then
    echo "----- contents of errfile -----" >> $pgmout
    cat errfile >> $pgmout
  fi
  >&2 cat $pgmout
elif [ -s errfile ]; then
  >&2 cat errfile
fi

if [ -n "$LSB_JOBID" ]; then
  if [ "$SENDECF" = "YES" ]; then
    timeout 30 ecflow_client --msg "$ECF_NAME: $msg1"
    if [ "$RUN_ENVIR" = "nco" ] && [ -n "$ECF_NODE" ] && [ -n "$ECF_NAME" ] && [ -n "$ECF_TRYNO" ]; then
      if ([ "$SITE" = "LUNA" ] && [[ "$ECF_NODE" == lecflow? ]]) || ([ "$SITE" = "SURGE" ] && [[ "$ECF_NODE" == secflow? ]]); then
        echo "$msg2" >> /gpfs/hps/nco/ops/ecf/ecfnets/output${ECF_NAME}.$ECF_TRYNO
      else
        timeout 30 ssh ecfprod@$ECF_NODE "echo \"$msg2\" >> /ecf/ecfnets/output${ECF_NAME}.$ECF_TRYNO"
      fi
    fi
  fi
  bkill $LSB_JOBID
  sleep 60  # Wait for LSF to kill the job
fi
