#!/bin/sh

# SCRIPT NAME:  err_check  Author:   Bill Facey   2 Apr 96
#                          Modified: Kit Menlove 28 May 15
#
# ABSTRACT:  This script checks a return code in $err.  If $err=0
# a message that the program completed is put in the job outputfile and
# in a log file.  If $err != 0 then fail messages are put in job 
# output file and in the jlogfile and the job is terminated.
# 
# USAGE:  To use this script one must export the following variables
# to the script:  err, pgm, pgmout, jobid, and jlogfile.

COREROOT=/gpfs/hps/ptmp/production.core/${jobid}

if [ -z "$err" ]; then
  err_exit "RETURN CODE NOT EXPORTED prior to running err_chk"
elif [ $err -ne 0 ]; then
  #  If error return code is 139, then program segfaulted.
  #  Look for any core files, and save them to a directory in /ptmpp1
  if [ $err -eq 139 ]; then
    >&2 echo "SegFault reported. Copying core files to ${COREROOT}"
    cd $DATA
    if [ -s core ]; then
      mkdir -p ${COREROOT}
      cp -p core ${COREROOT}/$pgm.$$.core
    fi 
    for coredir in `ls -d coredir.*`; do
      mkdir -p ${COREROOT}/$coredir
      cp -p ${coredir}/* ${COREROOT}/${coredir}/
    done
  fi
  err_exit $@
elif [ -n "$pgm" ]; then
  msg="$pgm completed cleanly"
  postmsg $jlogfile "$msg"
  echo "$msg"
fi
